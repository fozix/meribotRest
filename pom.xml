<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.meritis</groupId>
	<artifactId>meribotREST</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>meribotREST</name>
	<description>REST interface Angular web application</description>

	<properties>
		<java.version>1.8</java.version>
		<azure.resourceapp>otmane-apps</azure.resourceapp>
		<azure.appname>mockBot</azure.appname>
		<azure.region>France Central</azure.region>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!--             <groupId>org.springframework.boot</groupId> -->
<!--             <artifactId>spring-boot-starter-data-jpa</artifactId> -->
<!--         </dependency> -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
			<scope>compile</scope>
		</dependency>
        <!--WebJars-->
<!-- 		<dependency> -->
<!-- 			<groupId>com.h2database</groupId> -->
<!-- 			<artifactId>h2</artifactId> -->
<!-- 		</dependency> -->
	</dependencies>
	

	<build>
		<plugins>
			<plugin>
			    <groupId>org.springframework.boot</groupId>
			    <artifactId>spring-boot-maven-plugin</artifactId>
			    <executions>
			        <execution>
			            <goals>
			                <goal>repackage</goal>
			            </goals>
			            <configuration>
			                <mainClass>com.meritis.meribot.MeribotApplication</mainClass>
			                <outputDirectory>${project.basedir}/docker</outputDirectory>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			<plugin>
				 <groupId>com.microsoft.azure</groupId>
				 <artifactId>azure-webapp-maven-plugin</artifactId>
				 <version>1.4.0</version>
				 <configuration>
				   <deploymentType>jar</deploymentType>
				
				   <!-- configure app to run on port 80, required by App Service -->
				   <appSettings>
				     <property> 
				       <name>JAVA_OPTS</name> 
				       <value>-Dserver.port=80</value> 
				     </property> 
				   </appSettings>
				
				   <!-- Web App information -->
				   <resourceGroup>${azure.resourceapp}</resourceGroup>
				   <appName>${azure.appname}</appName>
				   <region>${azure.region}</region>  
				
				   <!-- Java Runtime Stack for Web App on Linux-->
				   <linuxRuntime>jre8</linuxRuntime>
				 </configuration>
			</plugin>
		</plugins>
	</build>

</project>
